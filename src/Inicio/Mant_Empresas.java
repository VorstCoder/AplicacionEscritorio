/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Inicio;

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import servicios.IOException_Exception;
import servicios.Sucursal;
import servicios.Tienda;

/**
 *
 * @author Alex
 */
public class Mant_Empresas extends javax.swing.JFrame {

        int contadorIdTienda = 0;
                int contadorIdSucursal = 0;
        boolean estado = false;
        public Mant_Empresas() {
                initComponents();
                
        }

        /**
         * This method is called from within the constructor to initialize the form. WARNING: Do NOT
         * modify this code. The content of this method is always regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                jScrollPane1 = new javax.swing.JScrollPane();
                jTable1 = new javax.swing.JTable();
                jLabel1 = new javax.swing.JLabel();
                btnAgregarTienda = new javax.swing.JButton();
                tiendaTxt = new javax.swing.JTextField();
                masterScrollPane = new javax.swing.JScrollPane();
                tablaTienda = new javax.swing.JTable();
                masterScrollPane1 = new javax.swing.JScrollPane();
                tablaSucursal = new javax.swing.JTable();
                btnListar = new javax.swing.JButton();
                jLabel2 = new javax.swing.JLabel();
                cbTienda = new javax.swing.JComboBox<>();
                btnEliminarTienda = new javax.swing.JButton();
                btnLimpiar = new javax.swing.JButton();
                btnVolver = new javax.swing.JButton();
                btnEditarTienda = new javax.swing.JButton();
                jLabel3 = new javax.swing.JLabel();
                cbSucursal = new javax.swing.JComboBox<>();
                btnEliminarSucursal = new javax.swing.JButton();
                jLabel4 = new javax.swing.JLabel();
                direccionTxt = new javax.swing.JTextField();
                btnAgregarSucursal = new javax.swing.JButton();
                btnEditarSucursal = new javax.swing.JButton();
                jLabel5 = new javax.swing.JLabel();
                jLabel6 = new javax.swing.JLabel();
                regionTxt = new javax.swing.JTextField();
                ciudadTxt = new javax.swing.JTextField();

                jTable1.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null}
                        },
                        new String [] {
                                "Title 1", "Title 2", "Title 3", "Title 4"
                        }
                ));
                jScrollPane1.setViewportView(jTable1);

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                setPreferredSize(new java.awt.Dimension(860, 520));

                jLabel1.setText("Tienda:");

                btnAgregarTienda.setText("Agregar");
                btnAgregarTienda.setEnabled(false);
                btnAgregarTienda.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnAgregarTiendaActionPerformed(evt);
                        }
                });

                tiendaTxt.setEnabled(false);
                tiendaTxt.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                tiendaTxtActionPerformed(evt);
                        }
                });

                tablaTienda.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {
                                "IdTienda", "Tienda"
                        }
                ) {
                        Class[] types = new Class [] {
                                java.lang.Integer.class, java.lang.String.class
                        };

                        public Class getColumnClass(int columnIndex) {
                                return types [columnIndex];
                        }
                });
                masterScrollPane.setViewportView(tablaTienda);

                tablaSucursal.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {
                                "IdSucursal", "Ubicación", "Región"
                        }
                ) {
                        Class[] types = new Class [] {
                                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
                        };

                        public Class getColumnClass(int columnIndex) {
                                return types [columnIndex];
                        }
                });
                masterScrollPane1.setViewportView(tablaSucursal);

                btnListar.setText("Listar");
                btnListar.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnListarActionPerformed(evt);
                        }
                });

                jLabel2.setText("id tienda:");

                cbTienda.setEnabled(false);
                cbTienda.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                cbTiendaActionPerformed(evt);
                        }
                });

                btnEliminarTienda.setText("Eliminar Tienda");
                btnEliminarTienda.setEnabled(false);
                btnEliminarTienda.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnEliminarTiendaActionPerformed(evt);
                        }
                });

                btnLimpiar.setText("Limpiar");
                btnLimpiar.setEnabled(false);
                btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnLimpiarActionPerformed(evt);
                        }
                });

                btnVolver.setText("Volver");
                btnVolver.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnVolverActionPerformed(evt);
                        }
                });

                btnEditarTienda.setText("Editar");
                btnEditarTienda.setEnabled(false);
                btnEditarTienda.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnEditarTiendaActionPerformed(evt);
                        }
                });

                jLabel3.setText(" id sucursal:");

                cbSucursal.setEnabled(false);

                btnEliminarSucursal.setText("Eliminar Sucursal");
                btnEliminarSucursal.setEnabled(false);
                btnEliminarSucursal.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnEliminarSucursalActionPerformed(evt);
                        }
                });

                jLabel4.setText("Direccion:");

                direccionTxt.setEnabled(false);
                direccionTxt.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyTyped(java.awt.event.KeyEvent evt) {
                                direccionTxtKeyTyped(evt);
                        }
                });

                btnAgregarSucursal.setText("Agregar");
                btnAgregarSucursal.setEnabled(false);
                btnAgregarSucursal.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnAgregarSucursalActionPerformed(evt);
                        }
                });

                btnEditarSucursal.setText("Editar");
                btnEditarSucursal.setEnabled(false);
                btnEditarSucursal.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnEditarSucursalActionPerformed(evt);
                        }
                });

                jLabel5.setText("Comuna:");

                jLabel6.setText("Region:");

                regionTxt.setEnabled(false);
                regionTxt.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyTyped(java.awt.event.KeyEvent evt) {
                                regionTxtKeyTyped(evt);
                        }
                });

                ciudadTxt.setEnabled(false);
                ciudadTxt.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                ciudadTxtActionPerformed(evt);
                        }
                });
                ciudadTxt.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyTyped(java.awt.event.KeyEvent evt) {
                                ciudadTxtKeyTyped(evt);
                        }
                });

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                                .addGap(2, 2, 2)
                                                                                .addComponent(jLabel3)
                                                                                .addGap(18, 18, 18))
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addContainerGap()
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(jLabel4)
                                                                                        .addComponent(jLabel6)
                                                                                        .addComponent(jLabel5))
                                                                                .addGap(23, 23, 23)))
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                .addComponent(direccionTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                                                                                .addComponent(ciudadTxt))
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addComponent(cbSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(btnEliminarSucursal))))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addContainerGap()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel2)
                                                                        .addComponent(jLabel1))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                        .addComponent(cbTienda, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                        .addComponent(btnAgregarTienda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addGroup(layout.createSequentialGroup()
                                                                                                .addGap(14, 14, 14)
                                                                                                .addComponent(btnEliminarTienda))
                                                                                        .addGroup(layout.createSequentialGroup()
                                                                                                .addGap(18, 18, 18)
                                                                                                .addComponent(btnEditarTienda, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                                        .addComponent(tiendaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(masterScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(masterScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGap(80, 80, 80)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(regionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(btnAgregarSucursal, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                                                                        .addComponent(btnListar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(btnEditarSucursal, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE))))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(33, 33, 33))
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel2)
                                                        .addComponent(cbTienda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(btnEliminarTienda, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel1)
                                                        .addComponent(tiendaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(btnEditarTienda, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(btnAgregarTienda, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(masterScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(42, 42, 42)
                                                .addComponent(masterScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(btnEditarSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(btnAgregarSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(16, 16, 16))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(59, 59, 59)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(cbSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(btnEliminarSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel3))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel4)
                                                        .addComponent(direccionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(ciudadTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel5))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(regionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel6))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnVolver, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                                        .addComponent(btnListar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
                );

                pack();
        }// </editor-fold>//GEN-END:initComponents

        private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
                
                contadorIdTienda = 0;
                   cbTienda.setEnabled(true);
                 btnEliminarTienda.setEnabled(true);
                 tiendaTxt.setEnabled(true);
                 btnAgregarTienda.setEnabled(true);
                 btnEditarTienda.setEnabled(true);
                 cbSucursal.setEnabled(true);
                 
                 btnAgregarSucursal.setEnabled(true);               
                 direccionTxt.setEnabled(true);
                 ciudadTxt.setEnabled(true);
                 regionTxt.setEnabled(true);
                 
                 btnListar.setEnabled(false);
                btnLimpiar.setEnabled(true);
                
                
                
                
                cbTienda.removeAllItems();
       DefaultTableModel tb = (DefaultTableModel) tablaTienda.getModel();
        int a = tablaTienda.getRowCount()-1;
        for (int i = a; i >= 0; i--) {           
        tb.removeRow(tb.getRowCount()-1);
        }
        
         try {
            
            
            ArrayList<Tienda> tiendas = (ArrayList<Tienda>) traerTiendas();
            DefaultTableModel modelo = (DefaultTableModel)tablaTienda.getModel();
            
            if(cbTienda.isEnabled() == true){
            int i = 0;
            for (Tienda tienda : tiendas) {
               
                   
                cbTienda.addItem(Integer.toString(tienda.getIdtienda()));
                
                i++;
            }
            }
            
           Object[] fila = new Object[modelo.getColumnCount()];
           
            for (Tienda tienda : tiendas) {
                    contadorIdTienda = tienda.getIdtienda();
                fila[0] = tienda.getIdtienda();
                fila[1] = tienda.getNombretienda(); 
               
                modelo.addRow(fila);
            }
            
            
            
            
        } catch (IOException_Exception ex) {
            Logger.getLogger(Mant_Empresas.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        estado = false;
        
        
        

        
              
     
        
        
        
               
        }//GEN-LAST:event_btnListarActionPerformed

        private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
                 Menu_Administrador frameAdm = new Menu_Administrador();
            frameAdm.setVisible(true);
            dispose();
        }//GEN-LAST:event_btnVolverActionPerformed

        private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
                

              estado = true;           
     // Limpiar ComboBox y Tabla Sucursales
          cbSucursal.removeAllItems();
       DefaultTableModel tb2 = (DefaultTableModel) tablaSucursal.getModel();
        int b = tablaSucursal.getRowCount()-1;
        for (int i = b; i >= 0; i--) {           
        tb2.removeRow(tb2.getRowCount()-1);
        
        }
        
           // Limpiar ComboBox y Tabla Tiendas
         cbTienda.removeAllItems();
       DefaultTableModel tb = (DefaultTableModel) tablaTienda.getModel();
        int a = tablaTienda.getRowCount()-1;
        for (int i = a; i >= 0; i--) {           
        tb.removeRow(tb.getRowCount()-1);
        }
        
        
         estado = false;   
         
         
                 cbTienda.setEnabled(false);
                 btnEliminarTienda.setEnabled(false);
                 tiendaTxt.setEnabled(false);
                 btnAgregarTienda.setEnabled(false);
                 btnEditarTienda.setEnabled(false);
                 cbSucursal.setEnabled(false);
                 btnEliminarSucursal.setEnabled(false);
                 btnAgregarSucursal.setEnabled(false);
                
                 direccionTxt.setEnabled(false);
                 ciudadTxt.setEnabled(false);
                 regionTxt.setEnabled(false);
                 
                 btnListar.setEnabled(true);
                btnLimpiar.setEnabled(false);
        
        }//GEN-LAST:event_btnLimpiarActionPerformed

        private void cbTiendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTiendaActionPerformed
                
              
                if(estado == false){
                        
                        
                String idtienda = cbTienda.getSelectedItem().toString();
                int idtien = Integer.parseInt(idtienda);
                        
           cbSucursal.removeAllItems();
       DefaultTableModel tb2 = (DefaultTableModel) tablaSucursal.getModel();
        int a = tablaSucursal.getRowCount()-1;
        for (int i = a; i >= 0; i--) {           
        tb2.removeRow(tb2.getRowCount()-1);
        }
        
     
        
          try {
            
            
            ArrayList<Sucursal> sucursales = (ArrayList<Sucursal>) traerSucursalesxIdTienda(idtien);
            DefaultTableModel modelo2 = (DefaultTableModel)tablaSucursal.getModel();
            
            if(cbSucursal.isEnabled() == true){
            int i = 0;
            for (Sucursal sucursal : sucursales) {
               
                     
                cbSucursal.addItem(Integer.toString(sucursal.getIdSucursal()));
                
                i++;
            }
            }
            
           Object[] fila = new Object[modelo2.getColumnCount()];
           
            for (Sucursal sucursal : sucursales) {
                    contadorIdSucursal += 1;
                fila[0] = sucursal.getIdSucursal();
                fila[1] = sucursal.getCiudad() + " - " + sucursal.getDirecionUnica();       
                fila[2] = sucursal.getRegion();
                modelo2.addRow(fila);
            }
            
            
            
            
        } catch (IOException_Exception ex) {
            Logger.getLogger(Mant_Empresas.class.getName()).log(Level.SEVERE, null, ex);
        }
        
          
          
          
          
                }
                
                         
            if(tablaSucursal.getRowCount() == 0){ // no hay sucursales en esa tienda
            
                 btnEliminarSucursal.setEnabled(false);
                 btnEditarSucursal.setEnabled(false);
                 cbSucursal.setEnabled(false);
            }
            else{                               // si hay sucursales en esa tienda
                cbSucursal.setEnabled(true);
                 btnEliminarSucursal.setEnabled(true);
                 btnEditarSucursal.setEnabled(true);
            }
     
                 
          
        }//GEN-LAST:event_cbTiendaActionPerformed

        private void btnAgregarTiendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarTiendaActionPerformed
               
                 if(tiendaTxt.getText().length() == 0 ){
                        JOptionPane.showMessageDialog(null, "Atención: El campo de texto esta vacio,completelo","Mensaje",JOptionPane.INFORMATION_MESSAGE);                   
                 }
                 
                 
               else if(tiendaTxt.getText().length() < 4 ){
                
                     JOptionPane.showMessageDialog(null, "Atención: El nombre de la tienda es demasiado corto","Mensaje",JOptionPane.INFORMATION_MESSAGE);
                }
               else{
               
                    String nombreTienda = tiendaTxt.getText();
          boolean respuesta = registrarTienda(contadorIdTienda + 1, nombreTienda);
           // JOptionPane.showMessageDialog(null, contadorIdTienda + " : " + nombreTienda,"Mensaje",JOptionPane.INFORMATION_MESSAGE);
          if(respuesta == true){ // se registro correctamente la tienda
               this.btnLimpiarActionPerformed(evt);
               this.btnListarActionPerformed(evt);
                JOptionPane.showMessageDialog(null, "Se ha registrado correctamente la Tienda","Mensaje",JOptionPane.INFORMATION_MESSAGE);
          
          }
          else{ // hubo un error en el registro de la tienda
           JOptionPane.showMessageDialog(null, "No se pudo registrar la tienda, intentelo denuevo","Mensaje",JOptionPane.ERROR_MESSAGE);
          }
              
               
               }
                
                 tiendaTxt.setText("");
                
        }//GEN-LAST:event_btnAgregarTiendaActionPerformed

        private void tiendaTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tiendaTxtActionPerformed
                // TODO add your handling code here:
        }//GEN-LAST:event_tiendaTxtActionPerformed

        private void btnEliminarTiendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarTiendaActionPerformed
         
                String idtienda = cbTienda.getSelectedItem().toString();
                int idtien = Integer.parseInt(idtienda);
                boolean respuesta = eliminarTiendaxId(idtien);
                
                if(respuesta == true){ // si se ha eliminado la tienda
                
                          JOptionPane.showMessageDialog(null,  "Se ha eliminado la tienda","Mensaje",JOptionPane.INFORMATION_MESSAGE);   
                        this.btnLimpiarActionPerformed(evt);
               this.btnListarActionPerformed(evt);
                }
                else{ // la tienda contiene sucursales que deben ser eliminadas
                JOptionPane.showMessageDialog(null,  "Deben eliminarse todas las sucursales adheridas a esta tienda antes de poder eliminarla ","Mensaje",JOptionPane.ERROR_MESSAGE);   
                }       
                
                
                
        }//GEN-LAST:event_btnEliminarTiendaActionPerformed

        private void btnEditarTiendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarTiendaActionPerformed
               
                 if(tiendaTxt.getText().length() == 0 ){
                        JOptionPane.showMessageDialog(null, "Atención: El campo de texto esta vacio,completelo","Mensaje",JOptionPane.INFORMATION_MESSAGE);                   
                 }
                 
                 
               else if(tiendaTxt.getText().length() < 4 ){
                
                     JOptionPane.showMessageDialog(null, "Atención: El nombre de la tienda es demasiado corto","Mensaje",JOptionPane.INFORMATION_MESSAGE);
                }
               else{
               
                    String nombreTienda = tiendaTxt.getText();
                      String idtienda = cbTienda.getSelectedItem().toString();
                   int idtien = Integer.parseInt(idtienda);
                
          
                    boolean respuesta = actualizarTiendaxId(idtien,nombreTienda);
         
           // JOptionPane.showMessageDialog(null, contadorIdTienda + " : " + nombreTienda,"Mensaje",JOptionPane.INFORMATION_MESSAGE);
          if(respuesta == true){ // se registro correctamente la tienda
               this.btnLimpiarActionPerformed(evt);
               this.btnListarActionPerformed(evt);
                JOptionPane.showMessageDialog(null, "Se ha Modificado correctamente la Tienda","Mensaje",JOptionPane.INFORMATION_MESSAGE);
                tiendaTxt.setText("");
          
          }
          else{ // hubo un error en el registro de la tienda
           JOptionPane.showMessageDialog(null, "No se pudo Modificar la tienda, intentelo denuevo","Mensaje",JOptionPane.ERROR_MESSAGE);
          }
              
               
               }
                
                 direccionTxt.setText("");
                 ciudadTxt.setText("");
                 regionTxt.setText("");
                 
                
        }//GEN-LAST:event_btnEditarTiendaActionPerformed

        private void btnAgregarSucursalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarSucursalActionPerformed
           
                
                  if(direccionTxt.getText().length() == 0 ){
                        JOptionPane.showMessageDialog(null, "Atención: El campo dirección esta vacio,completelo","Mensaje",JOptionPane.INFORMATION_MESSAGE);                   
                 }
                  
                  else if (direccionTxt.getText().length() < 4){
                  
                    JOptionPane.showMessageDialog(null, "Atención: El campo dirección es demasiado corto","Mensaje",JOptionPane.INFORMATION_MESSAGE);
                  }
                  
                 else if (ciudadTxt.getText().length() == 0){
                  
                    JOptionPane.showMessageDialog(null, "Atención: El campo ciudad esta vacio,completelo","Mensaje",JOptionPane.INFORMATION_MESSAGE);
                  }
                 
               else if(ciudadTxt.getText().length() < 4 ){
                
                     JOptionPane.showMessageDialog(null, "Atención: El campo ciudad es demasiado corto","Mensaje",JOptionPane.INFORMATION_MESSAGE);
                }
               
                else if (regionTxt.getText().length() == 0){
                  
                    JOptionPane.showMessageDialog(null, "Atención: El campo región esta vacio,completelo","Mensaje",JOptionPane.INFORMATION_MESSAGE);
                  }
                 else if(regionTxt.getText().length() < 4 ){
                
                     JOptionPane.showMessageDialog(null, "Atención: El campo región de la es demasiado corto","Mensaje",JOptionPane.INFORMATION_MESSAGE);
                }
               
               
               else{
               
                  int idSucursal = selectMaxIdSucursal();  // trae el maximo id de la tabla sucursal + 1 para poder hacer registros
                  
                String idtienda = cbTienda.getSelectedItem().toString();
                int idtien = Integer.parseInt(idtienda);
                
                String direccion = direccionTxt.getText();
                String ciudad = ciudadTxt.getText();
                String region = regionTxt.getText();
                
                boolean respuesta = registrarSucursal(idSucursal,direccion,ciudad,region,idtien);
                         
           // JOptionPane.showMessageDialog(null, contadorIdTienda + " : " + nombreTienda,"Mensaje",JOptionPane.INFORMATION_MESSAGE);
          if(respuesta == true){ // se registro correctamente la tienda
               this.btnLimpiarActionPerformed(evt);
               this.btnListarActionPerformed(evt);
                JOptionPane.showMessageDialog(null, "Se ha registrado correctamente la Sucursal","Mensaje",JOptionPane.INFORMATION_MESSAGE);
          
          }
          else{ // hubo un error en el registro de la tienda
           JOptionPane.showMessageDialog(null, "No se pudo registrar la sucursal, intentelo denuevo","Mensaje",JOptionPane.ERROR_MESSAGE);
          }
              
               
               }
                
                 direccionTxt.setText("");
                 ciudadTxt.setText("");
                 regionTxt.setText("");
                this.cbTiendaActionPerformed(evt);
                
                
        }//GEN-LAST:event_btnAgregarSucursalActionPerformed

        private void btnEditarSucursalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarSucursalActionPerformed
                
                
                   if(direccionTxt.getText().length() == 0 ){
                        JOptionPane.showMessageDialog(null, "Atención: El campo dirección esta vacio,completelo","Mensaje",JOptionPane.INFORMATION_MESSAGE);                   
                 }
                  
                  else if (direccionTxt.getText().length() < 4){
                  
                    JOptionPane.showMessageDialog(null, "Atención: El campo dirección es demasiado corto","Mensaje",JOptionPane.INFORMATION_MESSAGE);
                  }
                  
                 else if (ciudadTxt.getText().length() == 0){
                  
                    JOptionPane.showMessageDialog(null, "Atención: El campo ciudad esta vacio,completelo","Mensaje",JOptionPane.INFORMATION_MESSAGE);
                  }
                 
               else if(ciudadTxt.getText().length() < 4 ){
                
                     JOptionPane.showMessageDialog(null, "Atención: El campo ciudad es demasiado corto","Mensaje",JOptionPane.INFORMATION_MESSAGE);
                }
               
                else if (regionTxt.getText().length() == 0){
                  
                    JOptionPane.showMessageDialog(null, "Atención: El campo región esta vacio,completelo","Mensaje",JOptionPane.INFORMATION_MESSAGE);
                  }
                 else if(regionTxt.getText().length() < 4 ){
                
                     JOptionPane.showMessageDialog(null, "Atención: El campo región es demasiado corto","Mensaje",JOptionPane.INFORMATION_MESSAGE);
                }
               else{
               
                    String direccion = direccionTxt.getText();
                    String ciudad = ciudadTxt.getText();
                    String region = regionTxt.getText();
                      String idsucursal = cbSucursal.getSelectedItem().toString();
                   int idsuc = Integer.parseInt(idsucursal);
                
          
                   boolean respuesta = actualizarSucursalxId(idsuc,direccion,ciudad,region);
                   
         
           // JOptionPane.showMessageDialog(null, contadorIdTienda + " : " + nombreTienda,"Mensaje",JOptionPane.INFORMATION_MESSAGE);
          if(respuesta == true){ // se registro correctamente la tienda
               this.btnLimpiarActionPerformed(evt);
               this.btnListarActionPerformed(evt);
                JOptionPane.showMessageDialog(null, "Se ha Modificado correctamente la Sucursal","Mensaje",JOptionPane.INFORMATION_MESSAGE);
          
          }
          else{ // hubo un error en el registro de la tienda
           JOptionPane.showMessageDialog(null, "No se pudo Modificar la sucursal, intentelo denuevo","Mensaje",JOptionPane.ERROR_MESSAGE);
          }
              
               
               }
                
                
                
                
        }//GEN-LAST:event_btnEditarSucursalActionPerformed

        private void btnEliminarSucursalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarSucursalActionPerformed
              
                  String idsucursal = cbSucursal.getSelectedItem().toString();
                int idsuc = Integer.parseInt(idsucursal);
                 boolean respuesta = eliminarSucursalxId(idsuc);
                   JOptionPane.showMessageDialog(null,"Se ha eleminado la sucursal","Mensaje",JOptionPane.INFORMATION_MESSAGE);
                
                this.btnLimpiarActionPerformed(evt);
               this.btnListarActionPerformed(evt);
                
                
        }//GEN-LAST:event_btnEliminarSucursalActionPerformed

        private void ciudadTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ciudadTxtKeyTyped
            
                
             // se impide que se ingresen numero al campo
                 char cadena= evt.getKeyChar();        
          if(Character.isDigit(cadena)) { 
              getToolkit().beep(); 
               
              evt.consume(); 
                
          } 
                
       
           // se impide que se agregan mas de x cantidad de caracteres
       if(ciudadTxt.getText().length()>15) {  
          evt.consume();
       }
                
        }//GEN-LAST:event_ciudadTxtKeyTyped

        private void regionTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_regionTxtKeyTyped
                
                
                      
             // se impide que se ingresen numero al campo
                 char cadena= evt.getKeyChar();        
          if(Character.isDigit(cadena)) { 
              getToolkit().beep(); 
               
              evt.consume(); 
                
          } 
                
       
           // se impide que se agregan mas de x cantidad de caracteres
       if(regionTxt.getText().length()>15) {  
          evt.consume();
       } 
                
                
                
        }//GEN-LAST:event_regionTxtKeyTyped

        private void ciudadTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ciudadTxtActionPerformed
                // TODO add your handling code here:
        }//GEN-LAST:event_ciudadTxtActionPerformed

        private void direccionTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_direccionTxtKeyTyped
               
                
                
                     // se impide que se agregan mas de x cantidad de caracteres
       if(direccionTxt.getText().length()>15) {  
          evt.consume();
       } 
        }//GEN-LAST:event_direccionTxtKeyTyped

        /**
         * @param args the command line arguments
         */
        public static void main(String args[]) {
                /* Set the Nimbus look and feel */
                //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
                /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
                 */
                try {
                        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                                if ("Nimbus".equals(info.getName())) {
                                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                                        break;
                                }
                        }
                } catch (ClassNotFoundException ex) {
                        java.util.logging.Logger.getLogger(Mant_Empresas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                        java.util.logging.Logger.getLogger(Mant_Empresas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                        java.util.logging.Logger.getLogger(Mant_Empresas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                        java.util.logging.Logger.getLogger(Mant_Empresas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }
                //</editor-fold>

                /* Create and display the form */
                java.awt.EventQueue.invokeLater(new Runnable() {
                        public void run() {
                                new Mant_Empresas().setVisible(true);
                        }
                });
        }

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton btnAgregarSucursal;
        private javax.swing.JButton btnAgregarTienda;
        private javax.swing.JButton btnEditarSucursal;
        private javax.swing.JButton btnEditarTienda;
        private javax.swing.JButton btnEliminarSucursal;
        private javax.swing.JButton btnEliminarTienda;
        public javax.swing.JButton btnLimpiar;
        public javax.swing.JButton btnListar;
        private javax.swing.JButton btnVolver;
        private javax.swing.JComboBox<String> cbSucursal;
        private javax.swing.JComboBox<String> cbTienda;
        private javax.swing.JTextField ciudadTxt;
        private javax.swing.JTextField direccionTxt;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JLabel jLabel2;
        private javax.swing.JLabel jLabel3;
        private javax.swing.JLabel jLabel4;
        private javax.swing.JLabel jLabel5;
        private javax.swing.JLabel jLabel6;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JTable jTable1;
        private javax.swing.JScrollPane masterScrollPane;
        private javax.swing.JScrollPane masterScrollPane1;
        private javax.swing.JTextField regionTxt;
        private javax.swing.JTable tablaSucursal;
        private javax.swing.JTable tablaTienda;
        private javax.swing.JTextField tiendaTxt;
        // End of variables declaration//GEN-END:variables

        private static java.util.List<servicios.Tienda> traerTiendas() throws IOException_Exception {
                servicios.WebService_Service service = new servicios.WebService_Service();
                servicios.WebService port = service.getWebServicePort();
                return port.traerTiendas();
        }

        private static java.util.List<servicios.Sucursal> traerSucursalesxIdTienda(int idtienda) throws IOException_Exception {
                servicios.WebService_Service service = new servicios.WebService_Service();
                servicios.WebService port = service.getWebServicePort();
                return port.traerSucursalesxIdTienda(idtienda);
        }

        private static boolean registrarSucursal(int idSucursal, java.lang.String direccion, java.lang.String ciudad, java.lang.String region, int idTienda) {
                servicios.WebService_Service service = new servicios.WebService_Service();
                servicios.WebService port = service.getWebServicePort();
                return port.registrarSucursal(idSucursal, direccion, ciudad, region, idTienda);
        }

        private static boolean registrarTienda(int idtienda, java.lang.String nombreTienda) {
                servicios.WebService_Service service = new servicios.WebService_Service();
                servicios.WebService port = service.getWebServicePort();
                return port.registrarTienda(idtienda, nombreTienda);
        }

        private static boolean eliminarTiendaxId(int idTienda) {
                servicios.WebService_Service service = new servicios.WebService_Service();
                servicios.WebService port = service.getWebServicePort();
                return port.eliminarTiendaxId(idTienda);
        }

        private static boolean actualizarTiendaxId(int idTienda, java.lang.String nombreTienda) {
                servicios.WebService_Service service = new servicios.WebService_Service();
                servicios.WebService port = service.getWebServicePort();
                return port.actualizarTiendaxId(idTienda, nombreTienda);
        }

        private static boolean actualizarSucursalxId(int idSucursal, java.lang.String direccion, java.lang.String ciudad, java.lang.String region) {
                servicios.WebService_Service service = new servicios.WebService_Service();
                servicios.WebService port = service.getWebServicePort();
                return port.actualizarSucursalxId(idSucursal, direccion, ciudad, region);
        }

        private static int selectMaxIdSucursal() {
                servicios.WebService_Service service = new servicios.WebService_Service();
                servicios.WebService port = service.getWebServicePort();
                return port.selectMaxIdSucursal();
        }

        private static boolean eliminarSucursalxId(int idSucursal) {
                servicios.WebService_Service service = new servicios.WebService_Service();
                servicios.WebService port = service.getWebServicePort();
                return port.eliminarSucursalxId(idSucursal);
        }

     
    

        
    
}
